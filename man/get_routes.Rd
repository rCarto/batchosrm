% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{get_routes}
\alias{get_routes}
\title{Get Routes with Asynchronous Requests and Parallelism}
\usage{
get_routes(
  x,
  overview = FALSE,
  max_radius = 1000,
  server = "http://0.0.0.0:5000/",
  profile = "car"
)
}
\arguments{
\item{x}{data.frame with x_src, y_src, x_dst, y_dst in WGS84 coordinates
(EPSG:4326)}

\item{overview}{if FALSE only distance and duration are computed and the
output is a matrix; if TRUE the "full" geometry is also computed and the
result is an sf object.}

\item{max_radius}{maximum distance between input coordinates and the road
network. If this distance is exceeded, then the road is not computed.}

\item{server}{OSRM server address}

\item{profile}{OSRM profile}
}
\value{
An sf object or a matrix is returned.
}
\description{
This function enables the fast computation of routes with async requests.
}
\examples{
\dontrun{
x <- read.csv(system.file("csv/berlin.csv", package = "batchosrm"))
res <- get_routes(
  x = x[1:2000,],
  overview = TRUE,
  max_radius = 1000,
  server = "http://0.0.0.0:5000/",
  profile = "car"
)

library(sf)
library(mapsf)
mf_theme("dracula")
st_transform(res, "EPSG:3035") |>
  mf_map(col = "#ffffff05", lwd = 1.2)
mf_title("Berlin")
}
}
